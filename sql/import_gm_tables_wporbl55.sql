create temporary table leagues
(
    league_id                              integer PRIMARY KEY,
    name                                   text,
    abbr                                   text,
    nation_id                              integer,
    language_id                            integer,
    gender                                 integer,
    historical_league                      integer,
    logo_file_name                         text,
    players_path                           text,
    start_date                             date,
    preferred_start_date                   date,
    pitcher_award_name                     text,
    mvp_award_name                         text,
    rookie_award_name                      text,
    defense_award_name                     text,
    fictional_players                      integer,
    start_fantasy_draft                    integer,
    trading_deadline                       integer,
    winter_meetings                        integer,
    arbitration_offering                   integer,
    show_draft_pool                        integer,
    rosters_expanded                       integer,
    draft_date                             date,
    rule_5_draft_date                      date,
    international_fa_date                  date,
    roster_expand_date                     date,
    trade_deadline_date                    date,
    allstar_date                           date,
    days_until_deadline                    integer,
    next_draft_type                        integer,
    parent_league_id                       integer,
    league_state                           integer,
    season_year                            integer,
    historical_year                        integer,
    league_level                           integer,
    stats_detail                           integer,
    historical_import_path                 text,
    foreigner_percentage                   integer,
    was_ootp6                              integer,
    was_65                                 integer,
    allstar_game                           integer,
    auto_schedule_allstar                  integer,
    allstar_team_id0                       integer,
    allstar_team_id1                       integer,
    schedule_file_1                        text,
    schedule_file_2                        text,
    rules_rule_5                           integer,
    rules_minor_league_options             integer,
    rules_trading                          integer,
    rules_trading_deadline_events          integer,
    rules_draft_pick_trading               integer,
    rules_financials                       integer,
    rules_amateur_draft                    integer,
    rules_fa_compensation                  integer,
    rules_schedule_balanced                integer,
    rules_schedule_inter_league            integer,
    rules_schedule_force_start_day         integer,
    rules_trades_other_leagues             integer,
    rules_free_agents_from_other_leagues   integer,
    rules_free_agents_leave_other_leagues  integer,
    rules_allstar_game                     integer,
    rules_spring_training                  integer,
    rules_active_roster_limit              integer,
    rules_secondary_roster_limit           integer,
    rules_expanded_roster_limit            integer,
    rules_min_service_days                 integer,
    rules_waiver_period_length             integer,
    rules_dfa_period_length                integer,
    rules_fa_minimum_years                 integer,
    rules_salary_arbitration_minimum_years integer,
    rules_minor_league_fa_minimum_years    integer,
    rules_foreigner_limit                  integer,
    rules_foreigner_pitcher_limit          integer,
    rules_foreigner_hitter_limit           integer,
    rules_schedule_games_per_team          integer,
    rules_schedule_typical_series          integer,
    rules_schedule_game_times              integer,
    rules_schedule_preferred_start_day     integer,
    rules_amateur_draft_rounds             integer,
    rules_minimum_salary                   integer,
    rules_salary_cap                       integer,
    rules_player_salary0                   integer,
    rules_player_salary1                   integer,
    rules_player_salary2                   integer,
    rules_player_salary3                   integer,
    rules_player_salary4                   integer,
    rules_player_salary5                   integer,
    rules_player_salary6                   integer,
    rules_player_salary7                   integer,
    rules_average_coach_salary             integer,
    rules_average_attendance               integer,
    rules_average_national_media_contract  integer,
    rules_cash_maximum                     integer,
    rules_average_ticket_price             double precision,
    rules_luxury_sharing                   integer,
    rules_revenue_sharing                  integer,
    rules_revenue_sharing_tax              integer,
    rules_luxury_sharing_cap               integer,
    rules_luxury_tax                       integer,
    rules_national_media_contract_fixed    integer,
    rules_owner_decides_budget             integer,
    rules_schedule_auto_adjust_dates       integer,
    rules_historical_import_rookies        integer,
    avg_rating_contact                     integer,
    avg_rating_gap                         integer,
    avg_rating_power                       integer,
    avg_rating_eye                         integer,
    avg_rating_strikeouts                  integer,
    avg_rating_stuff                       integer,
    avg_rating_movement                    integer,
    avg_rating_control                     integer,
    avg_rating_fielding0                   integer,
    avg_rating_fielding1                   integer,
    avg_rating_fielding2                   integer,
    avg_rating_fielding3                   integer,
    avg_rating_fielding4                   integer,
    avg_rating_fielding5                   integer,
    avg_rating_fielding6                   integer,
    avg_rating_fielding7                   integer,
    avg_rating_fielding8                   integer,
    avg_rating_fielding9                   integer,
    avg_rating_overall                     integer,
    avg_rating_age                         double precision,
    league_totals_ab                       integer,
    league_totals_h                        integer,
    league_totals_d                        integer,
    league_totals_t                        integer,
    league_totals_hr                       integer,
    league_totals_bb                       integer,
    league_totals_hp                       integer,
    league_totals_k                        integer,
    league_totals_pa                       integer,
    league_totals_babip                    double precision,
    league_totals_mod_h                    double precision,
    league_totals_mod_d                    double precision,
    league_totals_mod_t                    double precision,
    league_totals_mod_hr                   double precision,
    league_totals_mod_bb                   double precision,
    league_totals_mod_hp                   double precision,
    league_totals_mod_k                    double precision,
    league_totals_mod_babip                double precision,
    ml_equivalencies_avg                   double precision,
    ml_equivalencies_hr                    double precision,
    ml_equivalencies_eb                    double precision,
    ml_equivalencies_bb                    double precision,
    ml_equivalencies_k                     double precision,
    ml_equivalencies_hp                    double precision,
    player_creation_modifier_contact       double precision,
    player_creation_modifier_gap           double precision,
    player_creation_modifier_power         double precision,
    player_creation_modifier_eye           double precision,
    player_creation_modifier_strikeouts    double precision,
    player_creation_modifier_stuff         double precision,
    player_creation_modifier_movement      double precision,
    player_creation_modifier_control       double precision,
    player_creation_modifier_speed         double precision,
    player_creation_modifier_fielding      double precision,
    financial_coefficient                  double precision,
    world_start_year                       integer,
    league_current_date                    date,
    background_color_id                    text,
    text_color_id                          text,
    scouting_coach_id                      integer
);

\copy leagues FROM '/Users/brianmcneil/Library/Containers/com.ootpdevelopments.ootp26macqlm/Data/Application Support/Out of the Park Developments/OOTP Baseball 26/saved_games/WPORBL-55.lg/import_export/csv/leagues.csv' DELIMITER ',' NULL AS 'NULL' CSV HEADER encoding 'UTF-8';


create temporary table human_managers
(
    human_manager_id            integer PRIMARY KEY,
    is_commish                  integer,
    first_name                  text,
    last_name                   text,
    nick_name                   text,
    age                         integer,
    date_of_birth               date,
    city_of_birth_id            integer,
    nation_id                   integer,
    second_nation_id            integer,
    weight                      integer,
    height                      integer,
    retired                     integer,
    free_agent                  integer,
    league_id                   integer,
    last_league_id              integer,
    team_id                     integer,
    last_team_id                integer,
    organization_id             integer,
    last_organization_id        integer,
    language_ids0               integer,
    language_ids1               integer,
    uniform_number              integer,
    experience                  integer,
    person_type                 integer,
    bats                        integer,
    throws                      integer,
    personality_greed           integer,
    personality_loyalty         integer,
    personality_play_for_winner integer,
    personality_work_ethic      integer,
    personality_intelligence    integer,
    personality_leader          integer
);

\copy human_managers FROM '/Users/brianmcneil/Library/Containers/com.ootpdevelopments.ootp26macqlm/Data/Application Support/Out of the Park Developments/OOTP Baseball 26/saved_games/WPORBL-55.lg/import_export/csv/human_managers.csv' DELIMITER ',' NULL AS 'NULL' CSV HEADER encoding 'UTF-8';

INSERT INTO gm.human_manager (human_manager_id, is_commissioner_status, first_name, last_name, nick_name, date_of_birth, city_of_birth_id, nation_id, retired_status, free_agent_status, league_id, last_league_id, team_id, last_team_id, organization_id, last_organization_id, experience)
SELECT
    hm.human_manager_id,
    is_commish::boolean,
    first_name,
    last_name,
    nick_name,
    date_of_birth,
    CASE WHEN city_of_birth_id != 0 then city_of_birth_id END,
    nation_id,
    retired::boolean,
    free_agent::boolean,
    CASE WHEN league_id != 0 THEN league_id END,
    CASE WHEN last_league_id != 0 then last_league_id END,
    CASE WHEN team_id != 0 then team_id END,
    CASE WHEN last_team_id != 0 then last_team_id END,
    CASE WHEN organization_id != 0 THEN organization_id END,
    CASE WHEN last_organization_id != 0 THEN last_organization_id END,
    experience
FROM human_managers hm
EXCEPT
SELECT human_manager_id, is_commissioner_status, first_name, last_name, nick_name, date_of_birth, city_of_birth_id, nation_id, retired_status, free_agent_status, league_id, last_league_id, team_id, last_team_id, organization_id, last_organization_id, experience
FROM gm.human_manager
ON CONFLICT (human_manager_id) DO UPDATE
    SET
        is_commissioner_status = EXCLUDED.is_commissioner_status ,
        first_name = EXCLUDED.first_name ,
        last_name = EXCLUDED.last_name ,
        nick_name = EXCLUDED.nick_name ,
        date_of_birth = EXCLUDED.date_of_birth ,
        city_of_birth_id = EXCLUDED.city_of_birth_id ,
        nation_id = EXCLUDED.nation_id ,
        retired_status = EXCLUDED.retired_status ,
        free_agent_status = EXCLUDED.free_agent_status ,
        league_id = EXCLUDED.league_id ,
        last_league_id = EXCLUDED.last_league_id ,
        team_id = EXCLUDED.team_id ,
        last_team_id = EXCLUDED.last_team_id ,
        organization_id = EXCLUDED.organization_id ,
        last_organization_id = EXCLUDED.last_organization_id ,
        experience = EXCLUDED.experience ,
        modified_by = CURRENT_USER,
        modified_ts = now()
;

create temporary table human_manager_history_financials
(
    human_manager_id      integer,
    team_id               integer,
    year                  integer,
    league_id             integer,
    sub_league_id         integer,
    division_id           integer,
    gate_revenue          integer,
    media_revenue         integer,
    merchandising_revenue integer,
    other_revenue         integer,
    revenue_sharing       integer,
    luxury_sharing        integer,
    playoff_revenue       integer,
    cash                  integer,
    player_expenses       integer,
    staff_expenses        integer,
    stadium_expenses      integer,
    attendance            integer,
    fan_interest          integer,
    fan_loyalty           integer,
    fan_modifier          integer,
    ticket_price          double precision,
    budget                integer,
    market                integer,
    owner_expectation     integer,
    PRIMARY KEY (human_manager_id, team_id, year, league_id, sub_league_id, division_id)
);


\copy human_manager_history_financials FROM '/Users/brianmcneil/Library/Containers/com.ootpdevelopments.ootp26macqlm/Data/Application Support/Out of the Park Developments/OOTP Baseball 26/saved_games/WPORBL-55.lg/import_export/csv/human_manager_history_financials.csv' DELIMITER ',' NULL AS 'NULL' CSV HEADER encoding 'UTF-8';

INSERT INTO gm.human_manager_financial_history (human_manager_id, team_id, season, league_id, sub_league_id, division_id, t_gate_revenue, t_media_revenue, t_merchandising_revenue, t_other_revenue, t_revenue_sharing, t_playoff_revenue, t_cash, t_player_expenses, t_staff_expenses, t_stadium_expenses, t_attendance, t_fan_interest, t_fan_loyalty, t_fan_modifier, t_ticket_price, t_budget, market, owner_expectation_id)
SELECT
    f.human_manager_id,
    team_id,
    year,
    f.league_id,
    sub_league_id,
    division_id,
    gate_revenue,
    media_revenue,
    merchandising_revenue,
    other_revenue,
    revenue_sharing,
    playoff_revenue,
    cash,
    player_expenses,
    staff_expenses,
    stadium_expenses,
    attendance,
    fan_interest,
    fan_loyalty,
    fan_modifier,
    ticket_price,
    budget,
    market,
    CASE WHEN owner_expectation != 0 then owner_expectation END
FROM human_manager_history_financials f JOIN leagues l ON l.league_id = f.league_id and l.season_year = f.year
EXCEPT
SELECT human_manager_id, team_id, season, league_id, sub_league_id, division_id, t_gate_revenue, t_media_revenue, t_merchandising_revenue, t_other_revenue, t_revenue_sharing, t_playoff_revenue, t_cash, t_player_expenses, t_staff_expenses, t_stadium_expenses, t_attendance, t_fan_interest, t_fan_loyalty, t_fan_modifier, t_ticket_price, t_budget, market, owner_expectation_id
FROM gm.human_manager_financial_history
ON CONFLICT (human_manager_id, team_id, season, league_id, sub_league_id, division_id) DO UPDATE
    SET
        t_gate_revenue = EXCLUDED.t_gate_revenue ,
        t_media_revenue = EXCLUDED.t_media_revenue ,
        t_merchandising_revenue = EXCLUDED.t_merchandising_revenue ,
        t_other_revenue = EXCLUDED.t_other_revenue ,
        t_revenue_sharing = EXCLUDED.t_revenue_sharing ,
        t_playoff_revenue = EXCLUDED.t_playoff_revenue ,
        t_cash = EXCLUDED.t_cash ,
        t_player_expenses = EXCLUDED.t_player_expenses ,
        t_staff_expenses = EXCLUDED.t_staff_expenses ,
        t_stadium_expenses = EXCLUDED.t_stadium_expenses ,
        t_attendance = EXCLUDED.t_attendance ,
        t_fan_interest = EXCLUDED.t_fan_interest ,
        t_fan_loyalty = EXCLUDED.t_fan_loyalty ,
        t_fan_modifier = EXCLUDED.t_fan_modifier ,
        t_ticket_price = EXCLUDED.t_ticket_price ,
        t_budget = EXCLUDED.t_budget ,
        market = EXCLUDED.market ,
        owner_expectation_id = excluded.owner_expectation_id,
        modified_by = CURRENT_USER,
        modified_ts = now()
;

create temporary table human_manager_history
(
    human_manager_id     integer,
    team_id              integer,
    year                 integer,
    league_id            integer,
    sub_league_id        integer,
    division_id          integer,
    best_hitter_id       integer,
    best_pitcher_id      integer,
    best_rookie_id       integer,
    manager_id           integer,
    made_playoffs        integer,
    won_playoffs         integer,
    fired                integer,
    position_in_division integer,
    PRIMARY KEY (human_manager_id, team_id, year, league_id, sub_league_id, division_id)
);

\copy human_manager_history FROM '/Users/brianmcneil/Library/Containers/com.ootpdevelopments.ootp26macqlm/Data/Application Support/Out of the Park Developments/OOTP Baseball 26/saved_games/WPORBL-55.lg/import_export/csv/human_manager_history.csv' DELIMITER ',' NULL AS 'NULL' CSV HEADER encoding 'UTF-8';

INSERT INTO gm.human_manager_history (human_manager_id, team_id, season, league_id, sub_league_id, division_id, best_hitter_id, best_pitcher_id, best_rookie_id, manager_id, made_playoffs_status, won_playoffs_status, fired_status, r_standing_position_division)
SELECT
    human_manager_id,
    team_id,
    year,
    h.league_id,
    sub_league_id,
    division_id,
    CASE WHEN best_hitter_id != 0 THEN best_hitter_id END,
    CASE WHEN best_pitcher_id != 0 THEN best_pitcher_id END,
    CASE WHEN best_rookie_id != 0 THEN best_rookie_id END,
    manager_id,
    made_playoffs::boolean,
    won_playoffs::boolean,
    fired::boolean,
    position_in_division
FROM human_manager_history h JOIN leagues l ON l.league_id = h.league_id and l.season_year = h.year
EXCEPT
SELECT human_manager_id, team_id, season, league_id, sub_league_id, division_id, best_hitter_id, best_pitcher_id, best_rookie_id, manager_id, made_playoffs_status, won_playoffs_status, fired_status, r_standing_position_division
FROM gm.human_manager_history
ON CONFLICT (human_manager_id, team_id, season, league_id, sub_league_id, division_id) DO UPDATE
    SET
        best_hitter_id = EXCLUDED.best_hitter_id ,
        best_pitcher_id = EXCLUDED.best_pitcher_id ,
        best_rookie_id = EXCLUDED.best_rookie_id ,
        manager_id = EXCLUDED.manager_id ,
        made_playoffs_status = EXCLUDED.made_playoffs_status ,
        won_playoffs_status = EXCLUDED.won_playoffs_status ,
        fired_status = EXCLUDED.fired_status ,
        r_standing_position_division = EXCLUDED.r_standing_position_division ,
        modified_by = CURRENT_USER,
        modified_ts = now()
;

